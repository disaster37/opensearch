on:
  push:
    branches:
      - '*.v2'
  pull_request:
    branches:
      - '*.v2'
name: Test
jobs:
  test:
    strategy:
      matrix:
        go: [1.22.x]
        os: [ubuntu-latest]
    name: Run ${{ matrix.go }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Prepare tests
      run: |
        sudo apt-get install -y netcat
        sudo sysctl -w vm.max_map_count=262144
    - uses: KengoTODA/actions-setup-docker-compose@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Go ${{ matrix.go }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go }}

    - name: Checkout code
      uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run Docker containers
      run: make start

    - name: Check Docker containers
      run: docker ps -a

    - name: Get dependencies
      run: |
        go mod tidy
        
    - name: Wait for Opensearch
      run: |
        while ! nc -z localhost 9200; do sleep 1; done
        sleep 60

    - name: Run the tests
      run: |
        go test -covermode=atomic -coverprofile cover.out -deprecations -strict-decoder -v . ./config/... ./trace/... ./uritemplates/...

    - uses: codecov/codecov-action@v4
      with:
        files: cover.out
        flags: unittests
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}